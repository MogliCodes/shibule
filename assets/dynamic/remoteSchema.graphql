# This file was generated. Do not edit manually.

schema {
    query: Query
}

interface Entry {
    contentfulMetadata: ContentfulMetadata!
    sys: Sys!
}

union UiNavigationNavigationItemsItem = ContentBrand | PageGeneric

"Represents a binary file in a space. An asset can be any file type."
type Asset {
    contentType(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): String
    fileName(locale: String): String
    height(locale: String): Int
    linkedFrom(allowedLocales: [String]): AssetLinkingCollections
    size(locale: String): Int
    sys: Sys!
    title(locale: String): String
    url(locale: String, transform: ImageTransformOptions): String
    width(locale: String): Int
}

type AssetCollection {
    items: [Asset]!
    limit: Int!
    skip: Int!
    total: Int!
}

type AssetLinkingCollections {
    contentBrandCollection(limit: Int = 100, locale: String, order: [AssetLinkingCollectionsContentBrandCollectionOrder], preview: Boolean, skip: Int = 0): ContentBrandCollection
    elementImageCollection(limit: Int = 100, locale: String, order: [AssetLinkingCollectionsElementImageCollectionOrder], preview: Boolean, skip: Int = 0): ElementImageCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    mediaFileCollection(limit: Int = 100, locale: String, order: [AssetLinkingCollectionsMediaFileCollectionOrder], preview: Boolean, skip: Int = 0): MediaFileCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/contentBrand)"
type ContentBrand implements Entry {
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): ContentBrandDescription
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): ContentBrandLinkingCollections
    logo(locale: String, preview: Boolean): Asset
    slug(locale: String): String
    sys: Sys!
    title(locale: String): String
}

type ContentBrandCollection {
    items: [ContentBrand]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentBrandDescription {
    json: JSON!
    links: ContentBrandDescriptionLinks!
}

type ContentBrandDescriptionAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ContentBrandDescriptionEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ContentBrandDescriptionLinks {
    assets: ContentBrandDescriptionAssets!
    entries: ContentBrandDescriptionEntries!
    resources: ContentBrandDescriptionResources!
}

type ContentBrandDescriptionResources {
    block: [ResourceLink!]!
}

type ContentBrandLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    uiNavigationCollection(limit: Int = 100, locale: String, order: [ContentBrandLinkingCollectionsUiNavigationCollectionOrder], preview: Boolean, skip: Int = 0): UiNavigationCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/contentMagazineIssue)"
type ContentMagazineIssue implements Entry {
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): ContentMagazineIssueDescription
    download(locale: String, preview: Boolean, where: MediaFileFilter): MediaFile
    internalName(locale: String): String
    issueNumber(locale: String): Int
    linkedFrom(allowedLocales: [String]): ContentMagazineIssueLinkingCollections
    sys: Sys!
}

type ContentMagazineIssueCollection {
    items: [ContentMagazineIssue]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentMagazineIssueDescription {
    json: JSON!
    links: ContentMagazineIssueDescriptionLinks!
}

type ContentMagazineIssueDescriptionAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ContentMagazineIssueDescriptionEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ContentMagazineIssueDescriptionLinks {
    assets: ContentMagazineIssueDescriptionAssets!
    entries: ContentMagazineIssueDescriptionEntries!
    resources: ContentMagazineIssueDescriptionResources!
}

type ContentMagazineIssueDescriptionResources {
    block: [ResourceLink!]!
}

type ContentMagazineIssueLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/contentMusicReview)"
type ContentMusicReview implements Entry {
    artistCollection(limit: Int = 100, locale: String, order: [ContentMusicReviewArtistCollectionOrder], preview: Boolean, skip: Int = 0, where: MetaMusicArtistFilter): ContentMusicReviewArtistCollection
    contentfulMetadata: ContentfulMetadata!
    genreCollection(limit: Int = 100, locale: String, order: [ContentMusicReviewGenreCollectionOrder], preview: Boolean, skip: Int = 0, where: MetaMusicGenreFilter): ContentMusicReviewGenreCollection
    internalName(locale: String): String
    label(locale: String): String
    linkedFrom(allowedLocales: [String]): ContentMusicReviewLinkingCollections
    rating(locale: String): Int
    releaseDate(locale: String): DateTime
    sys: Sys!
    text(locale: String): ContentMusicReviewText
    title(locale: String): String
}

type ContentMusicReviewArtistCollection {
    items: [MetaMusicArtist]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentMusicReviewCollection {
    items: [ContentMusicReview]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentMusicReviewGenreCollection {
    items: [MetaMusicGenre]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentMusicReviewLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type ContentMusicReviewText {
    json: JSON!
    links: ContentMusicReviewTextLinks!
}

type ContentMusicReviewTextAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ContentMusicReviewTextEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ContentMusicReviewTextLinks {
    assets: ContentMusicReviewTextAssets!
    entries: ContentMusicReviewTextEntries!
    resources: ContentMusicReviewTextResources!
}

type ContentMusicReviewTextResources {
    block: [ResourceLink!]!
}

type ContentfulMetadata {
    tags: [ContentfulTag]!
}

"""

Represents a tag entity for finding and organizing content easily.
Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
    id: String
    name: String
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/elementImage)"
type ElementImage implements Entry {
    contentfulMetadata: ContentfulMetadata!
    image(locale: String, preview: Boolean): Asset
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): ElementImageLinkingCollections
    sys: Sys!
}

type ElementImageCollection {
    items: [ElementImage]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ElementImageLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/elementText)"
type ElementText implements Entry {
    contentfulMetadata: ContentfulMetadata!
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): ElementTextLinkingCollections
    sys: Sys!
    text(locale: String): ElementTextText
}

type ElementTextCollection {
    items: [ElementText]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ElementTextLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type ElementTextText {
    json: JSON!
    links: ElementTextTextLinks!
}

type ElementTextTextAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ElementTextTextEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ElementTextTextLinks {
    assets: ElementTextTextAssets!
    entries: ElementTextTextEntries!
    resources: ElementTextTextResources!
}

type ElementTextTextResources {
    block: [ResourceLink!]!
}

type EntryCollection {
    items: [Entry]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/layoutGrid)"
type LayoutGrid implements Entry {
    columnCount(locale: String): Int
    contentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): LayoutGridContentCollection
    contentfulMetadata: ContentfulMetadata!
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): LayoutGridLinkingCollections
    sys: Sys!
    title(locale: String): String
}

type LayoutGridCollection {
    items: [LayoutGrid]!
    limit: Int!
    skip: Int!
    total: Int!
}

type LayoutGridContentCollection {
    items: [Entry]!
    limit: Int!
    skip: Int!
    total: Int!
}

type LayoutGridLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/mediaFile)"
type MediaFile implements Entry {
    contentfulMetadata: ContentfulMetadata!
    file(locale: String, preview: Boolean): Asset
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): MediaFileLinkingCollections
    sys: Sys!
    title(locale: String): String
}

type MediaFileCollection {
    items: [MediaFile]!
    limit: Int!
    skip: Int!
    total: Int!
}

type MediaFileLinkingCollections {
    contentMagazineIssueCollection(limit: Int = 100, locale: String, order: [MediaFileLinkingCollectionsContentMagazineIssueCollectionOrder], preview: Boolean, skip: Int = 0): ContentMagazineIssueCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/metaMusicArtist)"
type MetaMusicArtist implements Entry {
    akaCollection(limit: Int = 100, locale: String, order: [MetaMusicArtistAkaCollectionOrder], preview: Boolean, skip: Int = 0, where: MetaMusicArtistFilter): MetaMusicArtistAkaCollection
    contentfulMetadata: ContentfulMetadata!
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): MetaMusicArtistLinkingCollections
    name(locale: String): String
    sys: Sys!
}

type MetaMusicArtistAkaCollection {
    items: [MetaMusicArtist]!
    limit: Int!
    skip: Int!
    total: Int!
}

type MetaMusicArtistCollection {
    items: [MetaMusicArtist]!
    limit: Int!
    skip: Int!
    total: Int!
}

type MetaMusicArtistLinkingCollections {
    contentMusicReviewCollection(limit: Int = 100, locale: String, order: [MetaMusicArtistLinkingCollectionsContentMusicReviewCollectionOrder], preview: Boolean, skip: Int = 0): ContentMusicReviewCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    metaMusicArtistCollection(limit: Int = 100, locale: String, order: [MetaMusicArtistLinkingCollectionsMetaMusicArtistCollectionOrder], preview: Boolean, skip: Int = 0): MetaMusicArtistCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/metaMusicGenre)"
type MetaMusicGenre implements Entry {
    contentfulMetadata: ContentfulMetadata!
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): MetaMusicGenreLinkingCollections
    name(locale: String): String
    sys: Sys!
}

type MetaMusicGenreCollection {
    items: [MetaMusicGenre]!
    limit: Int!
    skip: Int!
    total: Int!
}

type MetaMusicGenreLinkingCollections {
    contentMusicReviewCollection(limit: Int = 100, locale: String, order: [MetaMusicGenreLinkingCollectionsContentMusicReviewCollectionOrder], preview: Boolean, skip: Int = 0): ContentMusicReviewCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/pageGeneric)"
type PageGeneric implements Entry {
    contentfulMetadata: ContentfulMetadata!
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): PageGenericLinkingCollections
    parentPage(locale: String, preview: Boolean, where: PageGenericFilter): PageGeneric
    sectionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageGenericSectionsCollection
    slug(locale: String): String
    sys: Sys!
    title(locale: String): String
}

type PageGenericCollection {
    items: [PageGeneric]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PageGenericLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    pageGenericCollection(limit: Int = 100, locale: String, order: [PageGenericLinkingCollectionsPageGenericCollectionOrder], preview: Boolean, skip: Int = 0): PageGenericCollection
    uiNavigationCollection(limit: Int = 100, locale: String, order: [PageGenericLinkingCollectionsUiNavigationCollectionOrder], preview: Boolean, skip: Int = 0): UiNavigationCollection
}

type PageGenericSectionsCollection {
    items: [Entry]!
    limit: Int!
    skip: Int!
    total: Int!
}

type Query {
    asset(id: String!, locale: String, preview: Boolean): Asset
    assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
    contentBrand(id: String!, locale: String, preview: Boolean): ContentBrand
    contentBrandCollection(limit: Int = 100, locale: String, order: [ContentBrandOrder], preview: Boolean, skip: Int = 0, where: ContentBrandFilter): ContentBrandCollection
    contentMagazineIssue(id: String!, locale: String, preview: Boolean): ContentMagazineIssue
    contentMagazineIssueCollection(limit: Int = 100, locale: String, order: [ContentMagazineIssueOrder], preview: Boolean, skip: Int = 0, where: ContentMagazineIssueFilter): ContentMagazineIssueCollection
    contentMusicReview(id: String!, locale: String, preview: Boolean): ContentMusicReview
    contentMusicReviewCollection(limit: Int = 100, locale: String, order: [ContentMusicReviewOrder], preview: Boolean, skip: Int = 0, where: ContentMusicReviewFilter): ContentMusicReviewCollection
    elementImage(id: String!, locale: String, preview: Boolean): ElementImage
    elementImageCollection(limit: Int = 100, locale: String, order: [ElementImageOrder], preview: Boolean, skip: Int = 0, where: ElementImageFilter): ElementImageCollection
    elementText(id: String!, locale: String, preview: Boolean): ElementText
    elementTextCollection(limit: Int = 100, locale: String, order: [ElementTextOrder], preview: Boolean, skip: Int = 0, where: ElementTextFilter): ElementTextCollection
    entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
    layoutGrid(id: String!, locale: String, preview: Boolean): LayoutGrid
    layoutGridCollection(limit: Int = 100, locale: String, order: [LayoutGridOrder], preview: Boolean, skip: Int = 0, where: LayoutGridFilter): LayoutGridCollection
    mediaFile(id: String!, locale: String, preview: Boolean): MediaFile
    mediaFileCollection(limit: Int = 100, locale: String, order: [MediaFileOrder], preview: Boolean, skip: Int = 0, where: MediaFileFilter): MediaFileCollection
    metaMusicArtist(id: String!, locale: String, preview: Boolean): MetaMusicArtist
    metaMusicArtistCollection(limit: Int = 100, locale: String, order: [MetaMusicArtistOrder], preview: Boolean, skip: Int = 0, where: MetaMusicArtistFilter): MetaMusicArtistCollection
    metaMusicGenre(id: String!, locale: String, preview: Boolean): MetaMusicGenre
    metaMusicGenreCollection(limit: Int = 100, locale: String, order: [MetaMusicGenreOrder], preview: Boolean, skip: Int = 0, where: MetaMusicGenreFilter): MetaMusicGenreCollection
    pageGeneric(id: String!, locale: String, preview: Boolean): PageGeneric
    pageGenericCollection(limit: Int = 100, locale: String, order: [PageGenericOrder], preview: Boolean, skip: Int = 0, where: PageGenericFilter): PageGenericCollection
    uiNavigation(id: String!, locale: String, preview: Boolean): UiNavigation
    uiNavigationCollection(limit: Int = 100, locale: String, order: [UiNavigationOrder], preview: Boolean, skip: Int = 0, where: UiNavigationFilter): UiNavigationCollection
}

type ResourceLink {
    sys: ResourceSys!
}

type ResourceSys {
    linkType: String!
    type: String!
    urn: String!
}

type Sys {
    environmentId: String!
    firstPublishedAt: DateTime
    id: String!
    publishedAt: DateTime
    publishedVersion: Int
    spaceId: String!
}

"[See type definition](https://app.contentful.com/spaces/52n4e3ya8eqj/content_types/uiNavigation)"
type UiNavigation implements Entry {
    contentfulMetadata: ContentfulMetadata!
    internalName(locale: String): String
    linkedFrom(allowedLocales: [String]): UiNavigationLinkingCollections
    navigationItemsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: UiNavigationNavigationItemsFilter): UiNavigationNavigationItemsCollection
    sys: Sys!
}

type UiNavigationCollection {
    items: [UiNavigation]!
    limit: Int!
    skip: Int!
    total: Int!
}

type UiNavigationLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type UiNavigationNavigationItemsCollection {
    items: [UiNavigationNavigationItemsItem]!
    limit: Int!
    skip: Int!
    total: Int!
}

enum AssetLinkingCollectionsContentBrandCollectionOrder {
    internalName_ASC
    internalName_DESC
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum AssetLinkingCollectionsElementImageCollectionOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum AssetLinkingCollectionsMediaFileCollectionOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum AssetOrder {
    contentType_ASC
    contentType_DESC
    fileName_ASC
    fileName_DESC
    height_ASC
    height_DESC
    size_ASC
    size_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    url_ASC
    url_DESC
    width_ASC
    width_DESC
}

enum ContentBrandLinkingCollectionsUiNavigationCollectionOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ContentBrandOrder {
    internalName_ASC
    internalName_DESC
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum ContentMagazineIssueOrder {
    internalName_ASC
    internalName_DESC
    issueNumber_ASC
    issueNumber_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ContentMusicReviewArtistCollectionOrder {
    internalName_ASC
    internalName_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ContentMusicReviewGenreCollectionOrder {
    internalName_ASC
    internalName_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ContentMusicReviewOrder {
    internalName_ASC
    internalName_DESC
    label_ASC
    label_DESC
    rating_ASC
    rating_DESC
    releaseDate_ASC
    releaseDate_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum ElementImageOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ElementTextOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum EntryOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ImageFormat {
    AVIF
    "JPG image format."
    JPG
    """

    Progressive JPG format stores multiple passes of an image in progressively higher detail.
    When a progressive image is loading, the viewer will first see a lower quality pixelated version which
    will gradually improve in detail, until the image is fully downloaded. This is to display an image as
    early as possible to make the layout look as designed.
    """
    JPG_PROGRESSIVE
    "PNG image format"
    PNG
    """

    8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
    The 8-bit PNG format is mostly used for simple images, such as icons or logos.
    """
    PNG8
    "WebP image format."
    WEBP
}

enum ImageResizeFocus {
    "Focus the resizing on the bottom."
    BOTTOM
    "Focus the resizing on the bottom left."
    BOTTOM_LEFT
    "Focus the resizing on the bottom right."
    BOTTOM_RIGHT
    "Focus the resizing on the center."
    CENTER
    "Focus the resizing on the largest face."
    FACE
    "Focus the resizing on the area containing all the faces."
    FACES
    "Focus the resizing on the left."
    LEFT
    "Focus the resizing on the right."
    RIGHT
    "Focus the resizing on the top."
    TOP
    "Focus the resizing on the top left."
    TOP_LEFT
    "Focus the resizing on the top right."
    TOP_RIGHT
}

enum ImageResizeStrategy {
    "Crops a part of the original image to fit into the specified dimensions."
    CROP
    "Resizes the image to the specified dimensions, cropping the image if needed."
    FILL
    "Resizes the image to fit into the specified dimensions."
    FIT
    """

    Resizes the image to the specified dimensions, padding the image if needed.
    Uses desired background color as padding color.
    """
    PAD
    "Resizes the image to the specified dimensions, changing the original aspect ratio if needed."
    SCALE
    "Creates a thumbnail from the image."
    THUMB
}

enum LayoutGridOrder {
    columnCount_ASC
    columnCount_DESC
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum MediaFileLinkingCollectionsContentMagazineIssueCollectionOrder {
    internalName_ASC
    internalName_DESC
    issueNumber_ASC
    issueNumber_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum MediaFileOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum MetaMusicArtistAkaCollectionOrder {
    internalName_ASC
    internalName_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum MetaMusicArtistLinkingCollectionsContentMusicReviewCollectionOrder {
    internalName_ASC
    internalName_DESC
    label_ASC
    label_DESC
    rating_ASC
    rating_DESC
    releaseDate_ASC
    releaseDate_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum MetaMusicArtistLinkingCollectionsMetaMusicArtistCollectionOrder {
    internalName_ASC
    internalName_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum MetaMusicArtistOrder {
    internalName_ASC
    internalName_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum MetaMusicGenreLinkingCollectionsContentMusicReviewCollectionOrder {
    internalName_ASC
    internalName_DESC
    label_ASC
    label_DESC
    rating_ASC
    rating_DESC
    releaseDate_ASC
    releaseDate_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum MetaMusicGenreOrder {
    internalName_ASC
    internalName_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum PageGenericLinkingCollectionsPageGenericCollectionOrder {
    internalName_ASC
    internalName_DESC
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum PageGenericLinkingCollectionsUiNavigationCollectionOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum PageGenericOrder {
    internalName_ASC
    internalName_DESC
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum UiNavigationOrder {
    internalName_ASC
    internalName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

"""

A date-time string at UTC, such as 2007-12-03T10:15:30Z,
compliant with the 'date-time' format outlined in section 5.6 of
the RFC 3339 profile of the ISO 8601 standard for representation
of dates and times using the Gregorian calendar.
"""
scalar DateTime

"The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`."
scalar Dimension

"The 'HexColor' type represents color in `rgb:ffffff` string format."
scalar HexColor

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

"The 'Quality' type represents quality as whole numeric values between `1` and `100`."
scalar Quality

input AssetFilter {
    AND: [AssetFilter]
    OR: [AssetFilter]
    contentType: String
    contentType_contains: String
    contentType_exists: Boolean
    contentType_in: [String]
    contentType_not: String
    contentType_not_contains: String
    contentType_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    fileName: String
    fileName_contains: String
    fileName_exists: Boolean
    fileName_in: [String]
    fileName_not: String
    fileName_not_contains: String
    fileName_not_in: [String]
    height: Int
    height_exists: Boolean
    height_gt: Int
    height_gte: Int
    height_in: [Int]
    height_lt: Int
    height_lte: Int
    height_not: Int
    height_not_in: [Int]
    size: Int
    size_exists: Boolean
    size_gt: Int
    size_gte: Int
    size_in: [Int]
    size_lt: Int
    size_lte: Int
    size_not: Int
    size_not_in: [Int]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    url: String
    url_contains: String
    url_exists: Boolean
    url_in: [String]
    url_not: String
    url_not_contains: String
    url_not_in: [String]
    width: Int
    width_exists: Boolean
    width_gt: Int
    width_gte: Int
    width_in: [Int]
    width_lt: Int
    width_lte: Int
    width_not: Int
    width_not_in: [Int]
}

input ContentBrandFilter {
    AND: [ContentBrandFilter]
    OR: [ContentBrandFilter]
    contentfulMetadata: ContentfulMetadataFilter
    description_contains: String
    description_exists: Boolean
    description_not_contains: String
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    logo_exists: Boolean
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input ContentMagazineIssueFilter {
    AND: [ContentMagazineIssueFilter]
    OR: [ContentMagazineIssueFilter]
    contentfulMetadata: ContentfulMetadataFilter
    description_contains: String
    description_exists: Boolean
    description_not_contains: String
    download: cfMediaFileNestedFilter
    download_exists: Boolean
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    issueNumber: Int
    issueNumber_exists: Boolean
    issueNumber_gt: Int
    issueNumber_gte: Int
    issueNumber_in: [Int]
    issueNumber_lt: Int
    issueNumber_lte: Int
    issueNumber_not: Int
    issueNumber_not_in: [Int]
    sys: SysFilter
}

input ContentMusicReviewFilter {
    AND: [ContentMusicReviewFilter]
    OR: [ContentMusicReviewFilter]
    artist: cfMetaMusicArtistNestedFilter
    artistCollection_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    genre: cfMetaMusicGenreNestedFilter
    genreCollection_exists: Boolean
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    label: String
    label_contains: String
    label_exists: Boolean
    label_in: [String]
    label_not: String
    label_not_contains: String
    label_not_in: [String]
    rating: Int
    rating_exists: Boolean
    rating_gt: Int
    rating_gte: Int
    rating_in: [Int]
    rating_lt: Int
    rating_lte: Int
    rating_not: Int
    rating_not_in: [Int]
    releaseDate: DateTime
    releaseDate_exists: Boolean
    releaseDate_gt: DateTime
    releaseDate_gte: DateTime
    releaseDate_in: [DateTime]
    releaseDate_lt: DateTime
    releaseDate_lte: DateTime
    releaseDate_not: DateTime
    releaseDate_not_in: [DateTime]
    sys: SysFilter
    text_contains: String
    text_exists: Boolean
    text_not_contains: String
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input ContentfulMetadataFilter {
    tags: ContentfulMetadataTagsFilter
    tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
    id_contains_all: [String]
    id_contains_none: [String]
    id_contains_some: [String]
}

input ElementImageFilter {
    AND: [ElementImageFilter]
    OR: [ElementImageFilter]
    contentfulMetadata: ContentfulMetadataFilter
    image_exists: Boolean
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    sys: SysFilter
}

input ElementTextFilter {
    AND: [ElementTextFilter]
    OR: [ElementTextFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    sys: SysFilter
    text_contains: String
    text_exists: Boolean
    text_not_contains: String
}

input EntryFilter {
    AND: [EntryFilter]
    OR: [EntryFilter]
    contentfulMetadata: ContentfulMetadataFilter
    sys: SysFilter
}

input ImageTransformOptions {
    """

    Desired background color, used with corner radius or `PAD` resize strategy.
    Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
    """
    backgroundColor: HexColor
    """

    Desired corner radius in pixels.
    Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
    Defaults to `0`. Uses desired background color as padding color,
    unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
    """
    cornerRadius: Int
    "Desired image format. Defaults to the original image format."
    format: ImageFormat
    "Desired height in pixels. Defaults to the original image height."
    height: Dimension
    """

    Desired quality of the image in percents.
    Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
    """
    quality: Quality
    "Desired resize focus area. Defaults to `CENTER`."
    resizeFocus: ImageResizeFocus
    "Desired resize strategy. Defaults to `FIT`."
    resizeStrategy: ImageResizeStrategy
    "Desired width in pixels. Defaults to the original image width."
    width: Dimension
}

input LayoutGridFilter {
    AND: [LayoutGridFilter]
    OR: [LayoutGridFilter]
    columnCount: Int
    columnCount_exists: Boolean
    columnCount_gt: Int
    columnCount_gte: Int
    columnCount_in: [Int]
    columnCount_lt: Int
    columnCount_lte: Int
    columnCount_not: Int
    columnCount_not_in: [Int]
    contentCollection_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input MediaFileFilter {
    AND: [MediaFileFilter]
    OR: [MediaFileFilter]
    contentfulMetadata: ContentfulMetadataFilter
    file_exists: Boolean
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input MetaMusicArtistFilter {
    AND: [MetaMusicArtistFilter]
    OR: [MetaMusicArtistFilter]
    aka: cfMetaMusicArtistNestedFilter
    akaCollection_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
}

input MetaMusicGenreFilter {
    AND: [MetaMusicGenreFilter]
    OR: [MetaMusicGenreFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
}

input PageGenericFilter {
    AND: [PageGenericFilter]
    OR: [PageGenericFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    parentPage: cfPageGenericNestedFilter
    parentPage_exists: Boolean
    sectionsCollection_exists: Boolean
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input SysFilter {
    firstPublishedAt: DateTime
    firstPublishedAt_exists: Boolean
    firstPublishedAt_gt: DateTime
    firstPublishedAt_gte: DateTime
    firstPublishedAt_in: [DateTime]
    firstPublishedAt_lt: DateTime
    firstPublishedAt_lte: DateTime
    firstPublishedAt_not: DateTime
    firstPublishedAt_not_in: [DateTime]
    id: String
    id_contains: String
    id_exists: Boolean
    id_in: [String]
    id_not: String
    id_not_contains: String
    id_not_in: [String]
    publishedAt: DateTime
    publishedAt_exists: Boolean
    publishedAt_gt: DateTime
    publishedAt_gte: DateTime
    publishedAt_in: [DateTime]
    publishedAt_lt: DateTime
    publishedAt_lte: DateTime
    publishedAt_not: DateTime
    publishedAt_not_in: [DateTime]
    publishedVersion: Float
    publishedVersion_exists: Boolean
    publishedVersion_gt: Float
    publishedVersion_gte: Float
    publishedVersion_in: [Float]
    publishedVersion_lt: Float
    publishedVersion_lte: Float
    publishedVersion_not: Float
    publishedVersion_not_in: [Float]
}

input UiNavigationFilter {
    AND: [UiNavigationFilter]
    OR: [UiNavigationFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    navigationItems: cfnavigationItemsMultiTypeNestedFilter
    navigationItemsCollection_exists: Boolean
    sys: SysFilter
}

input UiNavigationNavigationItemsFilter {
    AND: [UiNavigationNavigationItemsFilter]
    OR: [UiNavigationNavigationItemsFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input cfMediaFileNestedFilter {
    AND: [cfMediaFileNestedFilter]
    OR: [cfMediaFileNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    file_exists: Boolean
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input cfMetaMusicArtistNestedFilter {
    AND: [cfMetaMusicArtistNestedFilter]
    OR: [cfMetaMusicArtistNestedFilter]
    akaCollection_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
}

input cfMetaMusicGenreNestedFilter {
    AND: [cfMetaMusicGenreNestedFilter]
    OR: [cfMetaMusicGenreNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
}

input cfPageGenericNestedFilter {
    AND: [cfPageGenericNestedFilter]
    OR: [cfPageGenericNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    parentPage_exists: Boolean
    sectionsCollection_exists: Boolean
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input cfnavigationItemsMultiTypeNestedFilter {
    AND: [cfnavigationItemsMultiTypeNestedFilter]
    OR: [cfnavigationItemsMultiTypeNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    internalName: String
    internalName_contains: String
    internalName_exists: Boolean
    internalName_in: [String]
    internalName_not: String
    internalName_not_contains: String
    internalName_not_in: [String]
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}
